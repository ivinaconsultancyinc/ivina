# Create the updated .gitignore.txt file content
gitignore_content = """
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
venv/
ENV/
env.bak/
venv.bak/
*.egg
*.egg-info/
dist/
build/
*.whl

# Flask instance folder
instance/

# Flask uploads folder
uploads/

# Generated reports
*.pdf
*.xlsx

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# dotenv
.env
.env.*

# virtualenv
.venv
venv/
ENV/
env.bak/
venv.bak/

# Spyder IDE
.spyderproject
.spyproject

# Rope IDE
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# VS Code
.vscode/

# PyCharm
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Editor directories and files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Updated app file
app_updated.py
"""

# Write the content to .gitignore.txt file
with open(".gitignore.txt", "w") as file:
    file.write(gitignore_content)

print("The updated .gitignore.txt file has been created successfully.")

